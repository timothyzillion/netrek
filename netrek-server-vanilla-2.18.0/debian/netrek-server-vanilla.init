#!/bin/sh
### BEGIN INIT INFO
# Provides:          netrekd
# Required-Start:    $local_fs $network $time
# Required-Stop:     $local_fs $network $time
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start and stop the netrekd server
# Description:       Controls the Netrek server daemon "netrekd"
### END INIT INFO
#

PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/games:/usr/lib/netrek-server-vanilla
DAEMON=/usr/games/netrekd
PIDFILE=/var/lib/netrek-server-vanilla/netrekd.pid
RUNASUSER=netrek
ENABLED=false
OPTIONS=

if [ -e /etc/default/netrek-server-vanilla ]; then
  . /etc/default/netrek-server-vanilla
fi

test -x $DAEMON || exit 0
if [ x"$ENABLED" = x"false" ]; then
  exit 0
fi

. /lib/lsb/init-functions

PATH=/bin:/usr/bin:/usr/games:/sbin:/usr/sbin
export PATH

case "$1" in
  start)
	log_daemon_msg "Starting Netrek Listener" "netrekd"
	start-stop-daemon --start --chuid $RUNASUSER --verbose --exec $DAEMON -- start $OPTIONS
	log_end_msg 0
	;;
  stop)
	log_daemon_msg "Stopping Netrek Listener" "netrekd"
	start-stop-daemon --stop --retry 5 --verbose --exec $DAEMON
	log_end_msg 0
	;;
  reload)
	log_action_msg "Reloading Netrek Listener Config"
	su -s /bin/sh -c '/usr/games/netrekd reload' $RUNASUSER
	;;
  force-reload|restart)
	$0 stop
	$0 start
	;;
  status)
	if [ ! -r $PIDFILE ]; then
	    exit 3
	fi
	PID=`cat $PIDFILE`
	EXE=/proc/$PID/exe
	if [ -x "$EXE" ] && 
            [ "`ls -l \"$EXE\" | cut -d'>' -f2,2 | cut -d' ' -f2,2`" = \
                "$DAEMON" ]; then
	    exit 0
	elif [ -r $PIDFILE ]; then
	    exit 1
	else
	    exit 3
	fi
	;;
    *)
	echo "Usage: $0 {start|stop|reload|restart|force-reload|status}"
	exit 1
	;;
esac

exit 0

